############
Installation
############

This project will download and install additional third-party open source software projects. Review the license terms of these open source projects before use.

The most basic installation of ``scene_synthesizer`` will install as few dependencies as possible:

.. code-block:: bash

    # clone repository
    cd scene_synthesizer/
    pip install -e .

This allows you to load and export most common formats: STL, PLY, OBJ, GLB, GLTF, URDF.

For importing and exporting USD files use the ``recommend`` pip extra:

.. code-block:: bash

    # clone repository
    cd scene_synthesizer/
    pip install -e .[recommend]
    
If you want the full experience, you can try the ``all`` extra which includes all the functionality:

.. code-block:: bash

    # clone repository
    cd scene_synthesizer/
    pip install -e .[all]


Soft Dependencies
=================

The function ``show_graph`` depends on `pygraphviz <http://pygraphviz.github.io/>`_.
If required, install via

.. code-block:: bash

    sudo apt-get install graphviz graphviz-dev
    python -m pip install pygraphviz


NVIDIA-Internal Installation
============================

SRL uploads its Python packages to the internal package registry https://gitlab-master.nvidia.com/srl/pypi.
To install ``scene_synthesizer`` from this registry you need to create a `GitLab personal access token <https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html>`__ with ``read_api`` scope.

Once you have created a GitLab ``token`` there are three ways to configure pip.
Either use the ``--extra-index-url`` argument with the pip install command:

.. code-block:: bash

    pip install --extra-index-url https://<username>:<token>@gitlab-master.nvidia.com/api/v4/projects/39931/packages/pypi/simple nvidia-scene_synthesizer
    pip install --extra-index-url https://<username>:<token>@gitlab-master.nvidia.com/api/v4/projects/39931/packages/pypi/simple nvidia-scene_synthesizer[recommend]
    pip install --extra-index-url https://<username>:<token>@gitlab-master.nvidia.com/api/v4/projects/39931/packages/pypi/simple nvidia-scene_synthesizer[all]

Or create a ``pip.conf`` file at ``~/.config/pip/`` with the following contents:

.. code-block:: bash

    [global]
    extra-index-url = https://<username>:<token>@gitlab-master.nvidia.com/api/v4/projects/39931/packages/pypi/simple

    [install]
    trusted-host = gitlab-master.nvidia.com

Or set the ``PIP_EXTRA_INDEX_URL`` environment variable:

.. code-block:: bash
    
    export PIP_EXTRA_INDEX_URL=https://<username>:<token>@gitlab-master.nvidia.com/api/v4/projects/39931/packages/pypi/simple

In all three options ``<username>`` refers to your NVIDIA GitLab username and ``<token>`` to your personal GitLab access token.


Installation From Source
========================

To install the package for development, first clone the repo and install with pip's editable mode. It is recommended to install the package into a conda or virtual environment.

.. code-block:: bash

    git clone ssh://git@gitlab-master.nvidia.com:12051/srl/scene_synthesizer.git
    cd scene_synthesizer
    virtualenv venv
    source venv/bin/activate
    pip install -e ".[ci,dev]"


Sanity Check
============

After installation the following should work seamlessly and should show a viewer of a kitchen scene.

.. code-block:: bash

    python -c "from scene_synthesizer import examples; examples.kitchen().show()"



.. note::

    The following instructions might be outdated and are under construction.



Soft Dependencies
=================

#. Set up `MeshSets <https://gitlab-master.nvidia.com/srl/meshsets>`__. This is required if you want to use ``scene_synth`` with non-procedural datasets (e.g. ``PartNet-Mobitlity`` or ``ShapeNet``)

   * Add the following to ``/etc/hosts``.

   .. code-block:: bash

      10.28.133.210   srl-server-01

   * Copy your SSH public key to ``srl-server-01``. The password is the standard SRL password.

   .. code-block:: bash

      ssh-copy-id srl@srl-server-01

   * Set the ``MeshSets`` data directory environment variable to the desired download location.

   .. code-block:: bash

      export MESHSETS_LOCAL_ROOT_DIR=<desired MeshSets data directory>


   .. note::

      For more information or for more detailed instructions see the `MeshSets README <https://gitlab-master.nvidia.com/srl/meshsets#setup-ssh-key>`__.


#. Boolean Operations

    To use boolean operations in trimesh (also used in ``examples.kitchen()``), install ``openSCAD`` (see https://trimsh.org/install.html#ubuntu-notes):

    .. code-block:: bash

        sudo apt-get install openscad

    You may need to add openSCAD to your list of PPA sources as well:

    .. code-block:: bash

        sudo add-apt-repository ppa:openscad/releases
        sudo apt update
